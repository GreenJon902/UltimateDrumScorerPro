#:set bar_size 50
#:set bar_size_hint None

#:set header_color ([0.5] * 3)
#:set side_bar_color ([0.4] * 3)
#:set bg_color ([0.2] * 3)

#:set score_zoom_start 0.5
#:set score_zoom_min 0.1
#:set score_zoom_max 2
#:set score_zoom_step 0.01

#:set score_zoom_bar_width 300
#:set score_zoom_bar_size_hint_x None
#:set score_zoom_sign_color ([0.2] * 3)

#:set slider_with_text_height 30

#:set add_text_popup_font_size_min_mm 5
#:set add_text_popup_font_size_max_mm 50
#:set add_text_popup_font_size_default_mm 10


BoxLayout:
    orientation: "vertical"

    BoxLayout: # HeaderBar
        size_hint_y: bar_size_hint
        height: bar_size


        canvas.before:
            Color:
                rgb: header_color

            Rectangle:
                pos: self.pos
                size: self.size

        Widget: # Spacer


        Image:
            source: "resources/zoom_minus_sign.png"
            size_hint_x: None
            on_height: self.width = self.height
            color: score_zoom_sign_color

        Slider:
            size_hint_x: score_zoom_bar_size_hint_x
            width: score_zoom_bar_width

            min: score_zoom_min
            max: score_zoom_max
            step: score_zoom_step

            value: score_zoom_start
            on_value: score_view.zoom = args[1]

        Image:
            source: "resources/zoom_plus_sign.png"
            size_hint_x: None
            on_height: self.width = self.height
            color: score_zoom_sign_color



    BoxLayout:
        orientation: "horizontal"




        BoxLayout: # SideBar
            orientation: "vertical"

            size_hint_x: bar_size_hint
            width: bar_size

            canvas.before:
                Color:
                    rgb: side_bar_color

                Rectangle:
                    pos: self.pos
                    size: self.size

            NoDisableSquareHoverButtonW:
                name: "text"
                on_press: app.sidebar_button_clicked(self)

            NoDisableSquareHoverButtonW:
                name: "add_bar"
                on_press: app.sidebar_button_clicked(self)


            Widget:




        BoxLayout: # BG
            canvas.before:
                Color:
                    rgb: bg_color

                Rectangle:
                    pos: self.pos
                    size: self.size


            ScoreView:
                id: score_view

                zoom: score_zoom_start





    FloatLayout:
        size_hint: None, None
        size: 0, 0

        CustomMouse:
            id: custom_mouse




<_HoverButton@BoxLayoutWithClickHoverEvent>:
    name: "unknown"

    on_press: image.source = f"resources/buttons/{root.name}_button_click.png"
    on_name: image.source = (f"resources/buttons/{root.name}_button_click.png" if self.state == "down" else (f"resources/buttons/{root.name}_button_hover.png" if self.mouse_over else (f"resources/buttons/{root.name}_button_normal.png")))

    Image:
        id: image


<NoDisableHoverButton@_HoverButton>:
    on_mouse_enter: root.ids.image.source = f"resources/buttons/{root.name}_button_hover.png" if root.ids.image.source == f"resources/buttons/{root.name}_button_normal.png" else root.ids.image.source
    on_mouse_leave: root.ids.image.source = f"resources/buttons/{root.name}_button_normal.png" if root.ids.image.source == f"resources/buttons/{root.name}_button_hover.png" else root.ids.image.source


<HoverButton@_HoverButton>:
    on_mouse_enter: root.ids.image.source = f"resources/buttons/{root.name}_button_hover.png"
    on_mouse_leave: root.ids.image.source = f"resources/buttons/{root.name}_button_normal.png"
    on_release: root.ids.image.source = f"resources/buttons/{root.name}_button_hover.png"




<NoDisableSquareHoverButtonW@NoDisableHoverButton>:
    size_hint_y: None
    on_width: self.height = self.width

<NoDisableSquareHoverButtonH@NoDisableHoverButton>:
    size_hint_x: None
    on_width: self.width = self.height



<SquareHoverButtonW@HoverButton>:
    size_hint_y: None
    on_width: self.height = self.width

<SquareHoverButtonH@HoverButton>:
    size_hint_x: None
    on_width: self.width = self.height




# Score Content

<Page>:
    canvas.before:
        PushMatrix
        Scale:
            xyz: self.scale_xyz

    canvas.after:
        PopMatrix


<PageBg>:
    canvas:
        Color:
            rgb: 255, 255, 255
        Rectangle:
            pos: 0, 0
            size: self.size


<Text>:
    Image:
        id: image



# Popups

<AddTextPopup>:
    title: "Text"
    size_hint: 0.5, 0.5

    BoxLayout:
        orientation: "vertical"

        BoxLayout:
            orientation: "horizontal"

            size_hint_y: None
            height: text.height

            Label:
                text: "Text "
                size_hint: None, None
                on_texture_size: self.width = self.texture.size[0]
                height: text.height

            TextInput:
                id: text
                hint_text: "Enter your text"



        BoxLayout:
            orientation: "horizontal"

            size_hint_y: None
            height: font_size.height

            Label:
                text: "Font Size (mm) "
                size_hint: None, None
                on_texture_size: self.width = self.texture.size[0]
                height: font_size.height

            SliderWithText:
                id: font_size

                min: add_text_popup_font_size_min_mm
                max: add_text_popup_font_size_max_mm
                value: add_text_popup_font_size_default_mm

                hint_text: "Font Size"



        Button:
            text: "Finish"
            on_release: root.on_finish_button(self, "down")



# Misc

<SliderWithText>:
    size_hint_y: None
    height: slider_with_text_height

    TextInput:
        id: text_input
        multiline: False
        hint_text: root.hint_text

        on_text_validate: root.validate_text()
        on_focus: root.validate_text()

    Slider:
        id: slider
        orientation: root.orientation

        min: root.min
        max: root.max

        on_value: root.value = self.value
